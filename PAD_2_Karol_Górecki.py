# -*- coding: utf-8 -*-
"""PAD2 - PD

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HCx2EEHtzqg08P0eM_5dSbaK1IGFJvHI

Zad.1
"""

import pandas as pd
import numpy as np

data = pd.read_csv('president_heights.csv') 
heights = np.array(data['height(cm)'])
print(heights)

print(heights) 

mean_heights = np.mean(heights)
standard_deviation = np.std(heights)
minimum_height = np.amin(heights)
maximum_height = np.amax(heights)

print("Mean height: " + np.array2string(mean_heights)) 

print("Standard deviation: " + np.array2string(standard_deviation)) 

print("Minimum height: " + np.array2string(minimum_height)) 

print("Maximum height: " + np.array2string(maximum_height)) 


percentile_25 = np.percentile(heights, 25)
median = np.median(heights)
percentile_75 = np.percentile(heights, 75)

print(f"25th percentile: {percentile_25}") 

print(f"Median: {median}") 

print(f"75th percentile: {percentile_75}")

"""Zad.2"""

dane_2 = np.genfromtxt('Zadanie_2.csv', delimiter =';') 

eigenvector = np.linalg.eig(dane_2)
print(f"Eigenvector: {eigenvector[0]}")
print(f"Eigenvalues: {eigenvector[1]}")

inverse_matrix = np.linalg.inv(dane_2) 
print(f"Inverse Matrix:\n {inverse_matrix}")

"""Zad.3"""

from numpy.core.multiarray import concatenate
rainfall = pd.read_csv("Seattle2014.csv")['PRCP'].values

inches = rainfall / 254.0

days_without_rain = inches[inches == 0].size
days_with_rain = inches[inches > 0].size
days_with_more_than_half_inch = inches[inches > 0.5].size
rainy_days_with_less_inches =  inches[(inches.astype(float) < 0.2) & (inches.astype(float) > 0)].size

print(f"Number days without rain: {days_without_rain}") 

print(f"Number days with rain: {days_with_rain}") 

print(f"Days with more than 0.5 inches: {days_with_more_than_half_inch}") 

print(f"Rainy days with < 0.2 inches  : {rainy_days_with_less_inches}") 


median_precip_rainy_days = np.median(inches[inches > 0])
median_precip_summer_days = np.median(inches[171:261])
maximum_precip_summer_days = np.max(inches[171:261])
first_part_of_days = inches[:170]
second_part_of_days = inches[262:]
median_precip_non_summer_days = np.median(concatenate([first_part_of_days, second_part_of_days]))

print(f"Median precip on rainy days in 2014 (inches): {median_precip_rainy_days}")
print(f"Median precip on summer days in 2014 (inches): {median_precip_summer_days} ")
print(f"Maximum precip on summer days in 2014 (inches): {maximum_precip_summer_days}")
print(f"Median precip on non-summer rainy days (inches): {median_precip_non_summer_days}")

"""Zad. 4"""

A = [0,3,2,5]
B = [0,3,1,4]

print(np.add(A, B))
print(np.subtract(A, B))
print(np.multiply(A, 4))
print(np.dot(A, B))
print(np.linalg.norm(B))